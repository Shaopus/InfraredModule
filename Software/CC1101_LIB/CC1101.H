/*
*********************************************************************************************************
*
*	模块名称 : CC1101驱动模块
*	文件名称 : CC1101.h
*	版    本 : V1.0
*	说    明 : 头文件
*	修改记录 :
*		版本号  日期        作者     说明
*		V1.0    2016-07-26  ShaoPu  正式发布
*********************************************************************************************************
*/
#ifndef _CC1101_H_
#define _CC1101_H_

#include "mytypedef.h"		//结构类型定义模块
#include "CC1101_REG.h"		//CC1101寄存器模块
#include "stm8l15x.h"
#include "spi.h"     					 //导入 SPI_ExchangeByte( );

/*
*********************************************************************************************************
------------------------------内部导入模块-------------------------
您必须为该模块提供以下功能：
1. INT8U SPI_ExchangeByte( INT8U input ); //SPI发送和接受
2. CC_CSN_LOW( );                         //片选有效 
3. CC_CSN_HIGH( );                        //片选关闭 
*********************************************************************************************************
*/

/*通过SPI操作CC1101的时候，要先判断MISO是否为低(为高则说明CC1101处于忙或者非激活状态)*/
#define CC_CSN_LOW( )   GPIO_ResetBits(GPIOB, GPIO_Pin_4);\
			while( GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_7 ) != 0);

#define CC_CSN_HIGH( )  GPIO_SetBits(GPIOB, GPIO_Pin_4)


/*
*********************************************************************************************************
------------------------------宏定义-------------------------
*********************************************************************************************************
*/
/*模式*/
typedef enum { TX_MODE, RX_MODE }TRMODE;
/*地址模式*/
typedef enum { BROAD_ALL, BROAD_NO, BROAD_0, BROAD_0AND255 }ADDR_MODE;
/*发送数据方式*/
typedef enum { BROADCAST, ADDRESS_CHECK} TX_DATA_MODE;

/*
*********************************************************************************************************
------------------------------函数定义-------------------------
*********************************************************************************************************
*/

/*设置CC1101进入睡眠模式*/
void CC1101Sleep(void);

/*设置CC1101模式*/
void CC1101SetTRMode( TRMODE mode );

/*设置CC1101进入空闲模式*/
void CC1101SetIdle( void );

/*清除发送的FIFO数据*/
void CC1101ClrTXBuff( void );

/*清除接受的FIFO数据*/
void CC1101ClrRXBuff( void );

/*CC1101发送数据包*/
void CC1101SendPacket( INT8U *txbuffer, INT8U size, TX_DATA_MODE mode );

/*设置CC1101的地址码*/
void CC1101SetAddress( INT8U address, ADDR_MODE AddressMode);

/*设置CC1101的同步字节*/
void CC1101SetSYNC( INT16U sync );

/*CC1101接受数据包*/
INT8U CC1101RecPacket( INT8U *rxBuffer );

/*初始化CC1101的WOR工作模式*/
void  CC1101WORInit( void );

/*初始化CC1101*/
void CC1101Init( void );

#endif // _CC1101_H_

/***********************************************(END OF FILE) *******************************************/
